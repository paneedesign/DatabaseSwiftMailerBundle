services:
    repository.email:
        class: PaneeDesign\DatabaseSwiftMailerBundle\Repository\EmailRepository
        factory: ['@=service(container.getParameter("ped_database_swift_mailer.entity_manager"))', 'getRepository']
        arguments: ['PedDatabaseSwiftMailerBundle:Email']

    PaneeDesign\DatabaseSwiftMailerBundle\Repository\EmailRepository:
        arguments: ['@doctrine']
        tags: ['doctrine.repository_service']

    PaneeDesign\DatabaseSwiftMailerBundle\Repository\EmailRepositoryInterface: '@PaneeDesign\DatabaseSwiftMailerBundle\Repository\EmailRepository'

    PaneeDesign\DatabaseSwiftMailerBundle\Service\EmailService:
        arguments: ['@=service(container.getParameter("ped_database_swift_mailer.entity_manager"))', '@repository.email']

    PaneeDesign\DatabaseSwiftMailerBundle\Service\EmailServiceInterface: '@PaneeDesign\DatabaseSwiftMailerBundle\Service\EmailService'

    PaneeDesign\DatabaseSwiftMailerBundle\Controller\EmailController:
        arguments:
            - '@PaneeDesign\DatabaseSwiftMailerBundle\Service\EmailServiceInterface'
            - "@=container.hasParameter('ped_database_swift_mailer.views.max_page_rows') ? parameter('ped_database_swift_mailer.views.max_page_rows') : 30"
        tags: ['controller.service_arguments']

    PaneeDesign\DatabaseSwiftMailerBundle\Spool\DatabaseSpool:
        arguments:
            $emailService: '@PaneeDesign\DatabaseSwiftMailerBundle\Service\EmailServiceInterface'
            $parameters:
                auto_flush: "%ped_database_swift_mailer.auto_flush%"
                max_retries: "%ped_database_swift_mailer.max_retries%"
                delete_sent_messages: "%ped_database_swift_mailer.delete_sent_messages%"

    swiftmailer.spool.db:
        alias: PaneeDesign\DatabaseSwiftMailerBundle\Spool\DatabaseSpool

    swiftmailer.mailer.default.spool.db:
        alias: PaneeDesign\DatabaseSwiftMailerBundle\Spool\DatabaseSpool
